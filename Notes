class 1 -
Cucumber -

Java - programming language
Selenium - automate web based application

no reports in selenium
no common ground for all the team members

no main method for execution - no control of execution

smoke
regression

framework - this is the final outcome of the complete concepts

cucumber as a tool
cucumber/BDD/gherkin as a framework

Create a new project
File -> new -> Project -> Maven -> groupId -> artifactId -> click create

group id - it means the name of the organisation
artifact id - it means the name of the project


we created maven project -
pom.xml file is the configuration file where we will add all the dependencies
pom.xml is the file we will use to execute our code in the end of the framework
pom.xml is the file we will use to generate the report

in our project we get src folder in which we get main and test

main - the code we write to develop the application, we write it in main
test - the code we write to test the application, we write it in test

we delete main folder because we will work with test

in test folder -
we get java - to keep all the java stuff
we get resources - to keep all the non java stuff

java
selenium
cucumber
apache poi
commons

Class 2 -
Recap -
in selenium, we dont have reporting option, no execution control, no standard format
of writing the code. To achieve all these, we need to integrate our scripts with
additional tools and structure (framework)

cucumber is a tool which allows us to write scenarios in plain english text called
gherkin which follows behavioral driven development.

we created maven project
we have java, selenium, cucumber, apache poi

User story - 12345 - Valid admin login

Scenario -

Given - pre condition
when - actions
Then - expected result
And - supporting tag

Given user is navigated to HRMS application
When user enters admin username and password
And user clicks on login button
Then admin user is successfully logged in

in cucumber, every single test case will be considered as a scenario

we write scenario in cucumber in a special file called feature file having the
extension .feature

rules for writing the scenario -
once step def is created, don't add any space or . or any other character into it
don't create duplicate step, you will get an exception (duplicate step exception)

cucumber highly encourages code reusability

User story - Employee search

Scenario - search employee by id

    Given user is navigated to HRMS application
    When user enters admin username and password
    And user clicks on login button
    Then user is successfully logged in
    When user clicks on PIM option
    And user clicks on Employee List Option
    When user enters employee id
    And user clicks on search button
    Then user should be able to see employee details